- name: "Setup terminal | packages"
  ansible.builtin.apt:
    name:
      - bash-completion
      - binutils
    update_cache: true
  tags: packages, apt

- name: "Setup terminal | vim configuration"
  ansible.builtin.blockinfile:
    marker: '" {mark} ANSIBLE MANAGED BLOCK'
    path: ~/.vimrc
    mode: "0644"
    create: true
    block: |
      colorscheme ron
      set tabstop=2
      set shiftwidth=2
      set expandtab
      set autoindent

- name: "Setup terminal | bash configuration"
  ansible.builtin.blockinfile:
    path: ~/.bashrc
    mode: "0644"
    block: |
      source <(kubectl completion bash)
      alias k=kubectl
      alias c=clear
      complete -F __start_kubectl k
  tags: bash

- name: "Setup terminal | bash configuration"
  ansible.builtin.replace:
    path: ~/.bashrc
    regexp: '^#(force_color_prompt=yes)$'
    replace: '\1'
  tags: bash

- name: "Tools | include exam additionnal tools"
  ansible.builtin.include_tasks:
    file: additionnal_tools.yml

- name: "Disable swap | disable swap"
  ansible.builtin.command: swapoff -a
  when: ansible_swaptotal_mb > 0
  changed_when: ansible_swaptotal_mb > 0
  tags: swap

- name: "Disable swap | comment swap partition in fstab"
  ansible.posix.mount:
    path: none
    fstype: swap
    state: absent
  tags: swap

- name: "Apt | keyrings directory"
  ansible.builtin.file:
    path: /etc/apt/keyrings
    mode: "0755"
    state: directory
  tags: packages, apt

- name: "Podman | install and configure podman"
  ansible.builtin.include_tasks:
    file: podman.yml

- name: "Packages | kubernetes repo"
  ansible.builtin.deb822_repository:
    name: kubernetes
    types: [deb]
    uris: "https://pkgs.k8s.io/core:/stable:/v{{ kubernetes.version[0:4] }}/deb/"
    signed_by: "https://pkgs.k8s.io/core:/stable:/v{{ kubernetes.version[0:4] }}/deb/Release.key"
    suites: [/]
    state: present
    enabled: true
  tags: packages, apt

- name: "Packages | kubernetes packages"
  ansible.builtin.apt:
    name:
      - "kubelet={{ kubernetes.version }}-1.1"
      - "kubeadm={{ kubernetes.version }}-1.1"
      - "kubectl={{ kubernetes.version }}-1.1"
      - kubernetes-cni
    state: present
    update_cache: true
    allow_change_held_packages: true
  tags: packages, apt

- name: "Packages | hold kubernetes packages"
  ansible.builtin.dpkg_selections:
    name: "{{ item }}"
    selection: hold
  with_items:
    - kubelet
    - kubectl
    - kubeadm
    - kubernetes-cni
  tags: packages, apt

- name: "GVisor | install and configure gvisor"
  ansible.builtin.include_tasks:
    file: gvisor.yml
  when: gvisor.enabled

- name: "Containerd | install and configure containerd"
  ansible.builtin.include_tasks:
    file: containerd.yml

  # TODO: use handlers ?
- name: "Services | kubelet enabled and started"
  ansible.builtin.systemd:
    name: kubelet
    state: started
    daemon_reload: true
    enabled: true
  tags: kubelet

- name: "Course | git clone cks course repository"
  ansible.builtin.git:
    repo: https://github.com/killer-sh/cks-course-environment.git
    dest: /root/cks-course-environment

- name: "Falco | install and run falco"
  ansible.builtin.include_tasks:
    file: falco.yml
  when: falco.enabled

- name: "Kube-bench | install kube-bench"
  ansible.builtin.include_tasks:
    file: kube-bench.yml
  when: kube_bench.enabled
