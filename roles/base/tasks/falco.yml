# https://falco.org/docs/install-operate/installation/#installation-details
- name: "Falco | falco apt repo key"
  ansible.builtin.apt_key:
    url: https://falco.org/repo/falcosecurity-packages.asc
    state: present
  tags: packages, apt, falco

- name: "Falco | falco apt repo"
  ansible.builtin.apt_repository:
    repo: deb [arch=amd64] https://download.falco.org/packages/deb stable main
    filename: falco
    update_cache: true
    state: present
  tags: packages, apt, falco

- name: "Falco | prerequisite packages"
  ansible.builtin.apt:
    name:
      - dkms
      - make
      - linux-headers-{{ ansible_kernel }}
    state: present
    update_cache: true
  tags: packages, apt, falco

- name: "Falco | falco package"
  ansible.builtin.apt:
    name: falco
    state: present
    update_cache: true
  tags: packages, apt, falco

- name: "Falco | check if kernel module installed"
  ansible.builtin.stat:
    path: /lib/modules/{{ ansible_kernel }}/updates/dkms/falco.ko
  register: falco_module_file
  tags: falco, postinstall

- name: "Falco | driver kernel module"
  ansible.builtin.command: falcoctl driver config --type ebpf
  changed_when: false
  when: not falco_module_file.stat.exists
  tags: falco, postinstall

- name: "Falco | compile kernel module"
  ansible.builtin.command: falcoctl driver install
  changed_when: false
  when: not falco_module_file.stat.exists
  tags: falco, postinstall

- name: "Falco | falco service"
  ansible.builtin.systemd:
    name: falco-kmod
    state: stopped
    enabled: false
  tags: falco, postinstall, service

- name: "Falco | falco service"
  ansible.builtin.systemd:
    name: falco-bpf
    state: started
    enabled: true
  tags: falco, postinstall, service
